//sort string O(nlogn)
	public static ArrayList<String> sortStrings(String[] strs){
		ArrayList<String> res = new ArrayList<String>();
		Comparator<String> cmp = new Comparator<String>(){
			public int compare(String s1,String s2){
				if(s1.length()==s2.length())
					return s1.compareTo(s2);
				else if(s1.length() > s2.length())
					return 1;
				else 
					return -1;
			}
		};
		PriorityQueue<String> q = new PriorityQueue<String>();
		for(String s: strs)
			q.add(s);
		while(!q.isEmpty())
			res.add(q.poll());
		System.out.println(res);
		return res;
	}
	//O(n^2)
	 public static void sortString(String[] str){
//		 Arrays.sort(str);
		 for(int i = 0;i<str.length;i++)
			 for(int j = i+1;j<str.length;j++){
				 if(str[i].compareTo(str[j]) > 0){
					 String temp = str[i];
					 str[i] = str[j];
					 str[j] = temp;
				 }
			 }
		 for(String c: str)
			 System.out.print(c + " ");
		 System.out.println();
		 
	 }
